-   Playbook Keywords
-   Return Values
-   Ansible Configuration Settings
-   Controlling how Ansible behaves: precedence rules
-   YAML Syntax
-   Python 3 Support
-   Interpreter Discovery
-   Releases and maintenance
-   Testing Strategies
-   Sanity Tests
-   Frequently Asked Questions
-   Glossary
-   Ansible Reference: Module Utilities
-   Special Variables
-   Red Hat Ansible Automation Platform
-   Ansible Automation Hub
-   Logging Ansible output

Roadmaps

-   Ansible Roadmap
-   ansible-core Roadmaps

[]

Ansible

-   
-   Using Ansible playbooks
-   Executing playbooks
-   Executing playbooks for troubleshooting
-   Edit on GitHub

------------------------------------------------------------------------

Executing playbooks for troubleshooting

When you are testing new plays or debugging playbooks, you may need to
run the same play multiple times. To make this more efficient, Ansible
offers two alternative ways to execute a playbook: start-at-task and
step mode.

start-at-task

To start executing your playbook at a particular task (usually the task
that failed on the previous run), use the --start-at-task option.

    ansible-playbook playbook.yml --start-at-task="install packages"

In this example, Ansible starts executing your playbook at a task named
“install packages”. This feature does not work with tasks inside
dynamically re-used roles or tasks (include_*), see Comparing includes
and imports: dynamic and static re-use.

Step mode

To execute a playbook interactively, use --step.

    ansible-playbook playbook.yml --step

With this option, Ansible stops on each task, and asks if it should
execute that task. For example, if you have a task called “configure
ssh”, the playbook run will stop and ask.

    Perform task: configure ssh (y/n/c):

Answer “y” to execute the task, answer “n” to skip the task, and answer
“c” to exit step mode, executing all remaining tasks without asking.

See also

Ansible playbooks

    An introduction to playbooks

Debugging tasks

    Using the Ansible debugger

Previous Next

------------------------------------------------------------------------

© Copyright Ansible project contributors. Last updated on Jul 18, 2023.
